<!DOCTYPE html>
<!-- saved from url=(0034)http://localhost:3000/limitedalert -->
<html lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    
<title>Earny Coding Challenge</title>
<link rel="stylesheet" type="text/css" href="./Earny Coding Challenge_files/bootstrap.min.css">
<link rel="stylesheet" type="text/css" href="./Earny Coding Challenge_files/style.css">
<link rel="stylesheet" type="text/css" href="./Earny Coding Challenge_files/tomorrow-night-eighties.css">
<script language="javascript" src="./Earny Coding Challenge_files/jquery.min.js"></script>
<script language="javascript" src="./Earny Coding Challenge_files/bootstrap.min.js"></script>
<script src="./Earny Coding Challenge_files/highlight.pack.js"></script>
<script>hljs.initHighlightingOnLoad();</script>
<script src="./Earny Coding Challenge_files/highlightjs-line-numbers.min.js"></script><style type="text/css">.hljs-ln{border-collapse:collapse}.hljs-ln td{padding:0}.hljs-ln-n:before{content:attr(data-line-number)}</style>
<script>hljs.initLineNumbersOnLoad();</script>
</head>
<body class="container">



<main>
    <div class="container-fluid">
        <header>
            <nav class="navbar navbar-expand-md" role="navigation">
    <a class="navbar-brand" href="http://localhost:3000/limitedalert#">
        <!--<span class="glyphicons glyphicons-battery-charging"></span>-->
        <!--<img src="/glyphicons/png/glyphicons-765-battery-charging.png" />-->
    </a>

    <ul class="navbar-nav">
        <li class="nav-item nav-text"><a href="http://localhost:3000/">Home</a></li>
        <li class="dropdown">
            <a href="http://localhost:3000/limitedalert#" class="dropdown-toggle nav-text" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">
                Challenges
            </a>
            <ul class="dropdown-menu">
                <li> Coding</li>
                <li role="separator" class="divider"></li>

                <li class="dropdown-item"><a href="http://localhost:3000/limitedalert">Limited Alert</a></li>
                <li class="dropdown-item"><a href="http://localhost:3000/eventemitter">Event Emitter</a></li>
                <li class="dropdown-item"><a href="http://localhost:3000/uniquearray">Unique Array</a></li>
                <li class="dropdown-item"><a href="http://localhost:3000/palindrome">Palindrome</a></li>
                <li> DevOps</li>
                <!--<li><a href="#">Separated link</a></li>-->
                <!--<li role="separator" class="divider"></li>-->
                <!--<li><a href="#">One more separated link</a></li>-->
            </ul>
        </li>
        <li class="nav-item nav-text"><a href="http://localhost:3000/tests">Tests</a></li>
    </ul>
</nav>
        </header>

        <div class="challenge-description">
            <div class="challenge-title">
                <h2>Limited Alerts</h2>
                <hr>
            </div>


            <div class="code-block">
                <pre><code class="html hljs javascript"><table class="hljs-ln"><tbody><tr><td class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td><td class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>{</div></td></tr><tr><td class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td><td class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-comment"><span class="hljs-comment">/**</span></span></div></td></tr><tr><td class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td><td class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-comment">         * logs message if in NodeJS, shows alert popup window if in browser</span></div></td></tr><tr><td class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td><td class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-comment">         *</span></div></td></tr><tr><td class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td><td class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-comment">         * @param message</span></div></td></tr><tr><td class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td><td class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-comment">         */</span></div></td></tr><tr><td class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td><td class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">let</span> innerLimitedAlert = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">message</span>) </span>{</div></td></tr><tr><td class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td><td class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-keyword">if</span> (innerLimitedAlert.called &lt; <span class="hljs-number">3</span>) {</div></td></tr><tr><td class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td><td class="hljs-ln-code"><div class="hljs-ln-line">                <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> <span class="hljs-built_in">window</span> === <span class="hljs-string">"undefined"</span>) {</div></td></tr><tr><td class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td><td class="hljs-ln-code"><div class="hljs-ln-line">                    <span class="hljs-built_in">console</span>.log(message);</div></td></tr><tr><td class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td><td class="hljs-ln-code"><div class="hljs-ln-line">                } <span class="hljs-keyword">else</span> {</div></td></tr><tr><td class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td><td class="hljs-ln-code"><div class="hljs-ln-line">                    alert(message);</div></td></tr><tr><td class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></td><td class="hljs-ln-code"><div class="hljs-ln-line">                }</div></td></tr><tr><td class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></td><td class="hljs-ln-code"><div class="hljs-ln-line">    </div></td></tr><tr><td class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></td><td class="hljs-ln-code"><div class="hljs-ln-line">                innerLimitedAlert.called++;</div></td></tr><tr><td class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="16"></div></td><td class="hljs-ln-code"><div class="hljs-ln-line">            }</div></td></tr><tr><td class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="17"></div></td><td class="hljs-ln-code"><div class="hljs-ln-line">        };</div></td></tr><tr><td class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="18"></div></td><td class="hljs-ln-code"><div class="hljs-ln-line">    </div></td></tr><tr><td class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="19"></div></td><td class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-comment">// initialize called variable to be 0</span></div></td></tr><tr><td class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="20"></div></td><td class="hljs-ln-code"><div class="hljs-ln-line">        innerLimitedAlert.called = <span class="hljs-number">0</span> ;</div></td></tr><tr><td class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="21"></div></td><td class="hljs-ln-code"><div class="hljs-ln-line">    </div></td></tr><tr><td class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="22"></div></td><td class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-comment">// function used to display formatted code on this html page</span></div></td></tr><tr><td class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="23"></div></td><td class="hljs-ln-code"><div class="hljs-ln-line">        innerLimitedAlert.codeString = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{</div></td></tr><tr><td class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="24"></div></td><td class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-keyword">return</span> limitedAlert.toString().split(<span class="hljs-string">"\n"</span>).map(<span class="hljs-function">(<span class="hljs-params">line</span>) =&gt;</span> <span class="hljs-string">"    "</span> + line).join(<span class="hljs-string">"\n"</span>);</div></td></tr><tr><td class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="25"></div></td><td class="hljs-ln-code"><div class="hljs-ln-line">        };</div></td></tr><tr><td class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="26"></div></td><td class="hljs-ln-code"><div class="hljs-ln-line">    </div></td></tr><tr><td class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="27"></div></td><td class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-comment">// return alert function with limitation</span></div></td></tr><tr><td class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="28"></div></td><td class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">return</span> innerLimitedAlert;</div></td></tr><tr><td class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="29"></div></td><td class="hljs-ln-code"><div class="hljs-ln-line">    }</div></td></tr></tbody></table></code></pre>
            </div>

            <div class="text-description">
                <h4>Can you do it without exposing a global variable? Why would that be important?</h4>
                <hr>
                <p>
                    Yes, wrap the global variable in a function,
                    and if you need that variable in another function, use:
                    <br>
                    </p><ul>
                        <li>`bind` with the function scope</li>
                        <li>`call` with the function scope</li>
                        <li>implement a getter within the function</li>
                    </ul>
                    <br><br>
                    Exposing a global variable will pollute the global scope.
                    One can accidentally override/conflict some built in functions in the browser window's
                    global scope or another global variable specified at the top level with the same name.
                    However, if you use the `let` keyword, javascript will error out with
                    `Identifier has already been declared` at runtime (yay!).
                <p></p>
            </div>

        </div>
    </div>
</main>

<footer>
    <p class="text-center text-muted">© Copyright 2018 Charles Weng</p>
</footer>


</body></html>